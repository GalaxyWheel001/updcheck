// –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

interface AnalyticsEvent {
  event: string;
  userId: string;
  timestamp: number;
  data?: Record<string, unknown>;
}

class Analytics {
  private events: AnalyticsEvent[] = [];
  private isInitialized = false;

  init() {
    if (this.isInitialized || typeof window === 'undefined') return;
    
    // Add a small delay to ensure proper initialization
    setTimeout(() => {
      if (typeof window === 'undefined') return;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
      setInterval(() => {
        this.flushEvents();
      }, 30000);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      window.addEventListener('beforeunload', () => {
        this.flushEvents();
      });

      this.isInitialized = true;
    }, 100);
  }

  track(event: string, data?: Record<string, unknown>) {
    if (typeof window === 'undefined') return;
    
    const userId = localStorage.getItem('turbo_wheel_user_id') || 'unknown';
    
    this.events.push({
      event,
      userId,
      timestamp: Date.now(),
      data
    });

    // –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–π –º–Ω–æ–≥–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    if (this.events.length > 10) {
      this.flushEvents();
    }
  }

  private async flushEvents() {
    if (this.events.length === 0 || typeof window === 'undefined') return;

    const eventsToSend = [...this.events];
    this.events = [];

    try {
      // Log analytics events to console for static export
      console.log('Analytics events:', eventsToSend);
    } catch (error) {
      console.warn('Failed to send analytics:', error);
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      if (error instanceof Error && !error.message.includes('400')) {
        this.events.unshift(...eventsToSend);
      }
    }
  }

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  trackPerformance(metric: string, value: number) {
    this.track('performance', { metric, value });
  }

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –ø—É—Å—Ç—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
  trackError(error: Error, context?: string) {
    // –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ "Error: {}"
    if (!error || typeof error !== 'object' || !error.message) {
      console.error('üö® Analytics trackError –ø–æ–ª—É—á–∏–ª –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏:', {
        error,
        type: typeof error,
        constructor: error?.constructor?.name,
        keys: error ? Object.keys(error) : [],
        context
      });
      return;
    }
    
    this.track('error', {
      message: error.message,
      stack: error.stack,
      context
    });
  }

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
  trackUserAction(action: string, data?: Record<string, unknown>) {
    this.track('user_action', { action, ...data });
  }
}

export const analytics = new Analytics();

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
export function initPerformanceTracking() {
  if (typeof window === 'undefined') return;

  // Add a delay to ensure proper initialization
  setTimeout(() => {
    if (typeof window === 'undefined') return;

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener('load', () => {
      const loadTime = performance.now();
      try {
        analytics.trackPerformance('page_load', loadTime);
      } catch (error) {
        console.warn('Performance tracking failed:', error);
      }
    });

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –æ—à–∏–±–∫–∏
    window.addEventListener('error', (event) => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ error —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º
        const errorObj = event.error;
        if (!errorObj || typeof errorObj !== 'object') {
          console.warn('Invalid error object in analytics tracking:', errorObj);
          return;
        }
        analytics.trackError(errorObj, 'window_error');
      } catch (error) {
        console.warn('Error tracking failed:', error);
      }
    });

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–∏—Å—ã
    window.addEventListener('unhandledrejection', (event) => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ reason —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º
        const reason = event.reason;
        if (!reason || typeof reason !== 'object') {
          console.warn('Invalid promise rejection reason in analytics tracking:', reason);
          return;
        }
        analytics.trackError(new Error(String(reason)), 'unhandled_promise');
      } catch (error) {
        console.warn('Promise error tracking failed:', error);
      }
    });
  }, 200);
} 